# -*- coding: utf-8 -*-
"""ElasticNet_Regresyonu.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RU62gFpuDT5815OfAxxnM7JUJF1mI3FT

#ElasticNet (ENet) Regresyonu

Amaç hata kareler toplamını minmize eden katsayıları bu katsayılara bir ceza uygulayarak bulmaktır.
"""

import pandas as pd
from sklearn.model_selection import train_test_split, cross_val_score, cross_val_predict
import numpy as np
import matplotlib.pyplot as plt
from sklearn.metrics import mean_squared_error, r2_score
from sklearn.linear_model import ElasticNet

hit = pd.read_csv("/content/Hitters.csv")
df = hit.copy()
df = df.dropna()
dms = pd.get_dummies(df[['League', 'Division', 'NewLeague']])
y = df["Salary"]
X_ = df.drop(['Salary', 'League', 'Division', 'NewLeague'], axis=1).astype('float64')
X = pd.concat([X_, dms[['League_N', 'Division_W', 'NewLeague_N']]], axis=1)
X_train, X_test, y_train, y_test = train_test_split(X, y, 
                                                    test_size=0.25, 
                                                    random_state=42)

enet_model = ElasticNet().fit(X_train, y_train)

enet_model.coef_

enet_model.intercept_

"""##Model tahmin"""

enet_model.predict(X_test)

y_tahmin = enet_model.predict(X_test)

np.sqrt(mean_squared_error(y_test, y_tahmin))

r2_score(y_test, y_tahmin)

"""##Model ayarı yapma"""

from sklearn.linear_model import ElasticNetCV

enet_cv_model = ElasticNetCV(cv = 10, random_state= 0).fit(X_train,y_train)

enet_cv_model.alpha_

enet_ayar = ElasticNet(alpha = enet_cv_model.alpha_).fit(X_train,y_train)

y_tahmin = enet_ayar.predict(X_test)

np.sqrt(mean_squared_error(y_test, y_tahmin))

